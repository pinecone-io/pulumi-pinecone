// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The result of a get operation on a Pinecone collection.
 */
export function lookupPineconeCollection(args: LookupPineconeCollectionArgs, opts?: pulumi.InvokeOptions): Promise<LookupPineconeCollectionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pinecone:index:lookupPineconeCollection", {
        "name": args.name,
    }, opts);
}

export interface LookupPineconeCollectionArgs {
    /**
     * The name of the Pinecone collection.
     */
    name: string;
}

/**
 * The result of a get operation on a Pinecone collection.
 */
export interface LookupPineconeCollectionResult {
    /**
     * The dimension of the vectors stored in each record held in the collection.
     */
    readonly dimension: number;
    /**
     * The environment where the collection is hosted.
     */
    readonly environment: string;
    /**
     * The name of the collection to be created.
     */
    readonly name: string;
    /**
     * The size of the collection in bytes.
     */
    readonly size: number;
    /**
     * The name of the index to be used as the source for the collection.
     */
    readonly source: string;
    /**
     * The number of records stored in the collection.
     */
    readonly vectorCount: number;
}
/**
 * The result of a get operation on a Pinecone collection.
 */
export function lookupPineconeCollectionOutput(args: LookupPineconeCollectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<LookupPineconeCollectionResult> {
    return pulumi.output(args).apply((a: any) => lookupPineconeCollection(a, opts))
}

export interface LookupPineconeCollectionOutputArgs {
    /**
     * The name of the Pinecone collection.
     */
    name: pulumi.Input<string>;
}
