// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pinecone

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type IndexMetric string

const (
	IndexMetricDotproduct = IndexMetric("dotproduct")
	IndexMetricCosine     = IndexMetric("cosine")
	IndexMetricEuclidean  = IndexMetric("euclidean")
)

func (IndexMetric) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexMetric)(nil)).Elem()
}

func (e IndexMetric) ToIndexMetricOutput() IndexMetricOutput {
	return pulumi.ToOutput(e).(IndexMetricOutput)
}

func (e IndexMetric) ToIndexMetricOutputWithContext(ctx context.Context) IndexMetricOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IndexMetricOutput)
}

func (e IndexMetric) ToIndexMetricPtrOutput() IndexMetricPtrOutput {
	return e.ToIndexMetricPtrOutputWithContext(context.Background())
}

func (e IndexMetric) ToIndexMetricPtrOutputWithContext(ctx context.Context) IndexMetricPtrOutput {
	return IndexMetric(e).ToIndexMetricOutputWithContext(ctx).ToIndexMetricPtrOutputWithContext(ctx)
}

func (e IndexMetric) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IndexMetric) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IndexMetric) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IndexMetric) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IndexMetricOutput struct{ *pulumi.OutputState }

func (IndexMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexMetric)(nil)).Elem()
}

func (o IndexMetricOutput) ToIndexMetricOutput() IndexMetricOutput {
	return o
}

func (o IndexMetricOutput) ToIndexMetricOutputWithContext(ctx context.Context) IndexMetricOutput {
	return o
}

func (o IndexMetricOutput) ToIndexMetricPtrOutput() IndexMetricPtrOutput {
	return o.ToIndexMetricPtrOutputWithContext(context.Background())
}

func (o IndexMetricOutput) ToIndexMetricPtrOutputWithContext(ctx context.Context) IndexMetricPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IndexMetric) *IndexMetric {
		return &v
	}).(IndexMetricPtrOutput)
}

func (o IndexMetricOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IndexMetricOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IndexMetric) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IndexMetricOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IndexMetricOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IndexMetric) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IndexMetricPtrOutput struct{ *pulumi.OutputState }

func (IndexMetricPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexMetric)(nil)).Elem()
}

func (o IndexMetricPtrOutput) ToIndexMetricPtrOutput() IndexMetricPtrOutput {
	return o
}

func (o IndexMetricPtrOutput) ToIndexMetricPtrOutputWithContext(ctx context.Context) IndexMetricPtrOutput {
	return o
}

func (o IndexMetricPtrOutput) Elem() IndexMetricOutput {
	return o.ApplyT(func(v *IndexMetric) IndexMetric {
		if v != nil {
			return *v
		}
		var ret IndexMetric
		return ret
	}).(IndexMetricOutput)
}

func (o IndexMetricPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IndexMetricPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IndexMetric) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IndexMetricInput is an input type that accepts values of the IndexMetric enum
// A concrete instance of `IndexMetricInput` can be one of the following:
//
//	IndexMetricDotproduct
//	IndexMetricCosine
//	IndexMetricEuclidean
type IndexMetricInput interface {
	pulumi.Input

	ToIndexMetricOutput() IndexMetricOutput
	ToIndexMetricOutputWithContext(context.Context) IndexMetricOutput
}

var indexMetricPtrType = reflect.TypeOf((**IndexMetric)(nil)).Elem()

type IndexMetricPtrInput interface {
	pulumi.Input

	ToIndexMetricPtrOutput() IndexMetricPtrOutput
	ToIndexMetricPtrOutputWithContext(context.Context) IndexMetricPtrOutput
}

type indexMetricPtr string

func IndexMetricPtr(v string) IndexMetricPtrInput {
	return (*indexMetricPtr)(&v)
}

func (*indexMetricPtr) ElementType() reflect.Type {
	return indexMetricPtrType
}

func (in *indexMetricPtr) ToIndexMetricPtrOutput() IndexMetricPtrOutput {
	return pulumi.ToOutput(in).(IndexMetricPtrOutput)
}

func (in *indexMetricPtr) ToIndexMetricPtrOutputWithContext(ctx context.Context) IndexMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IndexMetricPtrOutput)
}

func (in *indexMetricPtr) ToOutput(ctx context.Context) pulumix.Output[*IndexMetric] {
	return pulumix.Output[*IndexMetric]{
		OutputState: in.ToIndexMetricPtrOutputWithContext(ctx).OutputState,
	}
}

type ServerlessSpecCloud string

const (
	ServerlessSpecCloudAws   = ServerlessSpecCloud("aws")
	ServerlessSpecCloudAzure = ServerlessSpecCloud("azure")
	ServerlessSpecCloudGcp   = ServerlessSpecCloud("gcp")
)

func (ServerlessSpecCloud) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessSpecCloud)(nil)).Elem()
}

func (e ServerlessSpecCloud) ToServerlessSpecCloudOutput() ServerlessSpecCloudOutput {
	return pulumi.ToOutput(e).(ServerlessSpecCloudOutput)
}

func (e ServerlessSpecCloud) ToServerlessSpecCloudOutputWithContext(ctx context.Context) ServerlessSpecCloudOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ServerlessSpecCloudOutput)
}

func (e ServerlessSpecCloud) ToServerlessSpecCloudPtrOutput() ServerlessSpecCloudPtrOutput {
	return e.ToServerlessSpecCloudPtrOutputWithContext(context.Background())
}

func (e ServerlessSpecCloud) ToServerlessSpecCloudPtrOutputWithContext(ctx context.Context) ServerlessSpecCloudPtrOutput {
	return ServerlessSpecCloud(e).ToServerlessSpecCloudOutputWithContext(ctx).ToServerlessSpecCloudPtrOutputWithContext(ctx)
}

func (e ServerlessSpecCloud) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServerlessSpecCloud) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ServerlessSpecCloud) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ServerlessSpecCloud) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ServerlessSpecCloudOutput struct{ *pulumi.OutputState }

func (ServerlessSpecCloudOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessSpecCloud)(nil)).Elem()
}

func (o ServerlessSpecCloudOutput) ToServerlessSpecCloudOutput() ServerlessSpecCloudOutput {
	return o
}

func (o ServerlessSpecCloudOutput) ToServerlessSpecCloudOutputWithContext(ctx context.Context) ServerlessSpecCloudOutput {
	return o
}

func (o ServerlessSpecCloudOutput) ToServerlessSpecCloudPtrOutput() ServerlessSpecCloudPtrOutput {
	return o.ToServerlessSpecCloudPtrOutputWithContext(context.Background())
}

func (o ServerlessSpecCloudOutput) ToServerlessSpecCloudPtrOutputWithContext(ctx context.Context) ServerlessSpecCloudPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerlessSpecCloud) *ServerlessSpecCloud {
		return &v
	}).(ServerlessSpecCloudPtrOutput)
}

func (o ServerlessSpecCloudOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ServerlessSpecCloudOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServerlessSpecCloud) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ServerlessSpecCloudOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServerlessSpecCloudOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ServerlessSpecCloud) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ServerlessSpecCloudPtrOutput struct{ *pulumi.OutputState }

func (ServerlessSpecCloudPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessSpecCloud)(nil)).Elem()
}

func (o ServerlessSpecCloudPtrOutput) ToServerlessSpecCloudPtrOutput() ServerlessSpecCloudPtrOutput {
	return o
}

func (o ServerlessSpecCloudPtrOutput) ToServerlessSpecCloudPtrOutputWithContext(ctx context.Context) ServerlessSpecCloudPtrOutput {
	return o
}

func (o ServerlessSpecCloudPtrOutput) Elem() ServerlessSpecCloudOutput {
	return o.ApplyT(func(v *ServerlessSpecCloud) ServerlessSpecCloud {
		if v != nil {
			return *v
		}
		var ret ServerlessSpecCloud
		return ret
	}).(ServerlessSpecCloudOutput)
}

func (o ServerlessSpecCloudPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ServerlessSpecCloudPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ServerlessSpecCloud) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ServerlessSpecCloudInput is an input type that accepts values of the ServerlessSpecCloud enum
// A concrete instance of `ServerlessSpecCloudInput` can be one of the following:
//
//	ServerlessSpecCloudAws
//	ServerlessSpecCloudAzure
//	ServerlessSpecCloudGcp
type ServerlessSpecCloudInput interface {
	pulumi.Input

	ToServerlessSpecCloudOutput() ServerlessSpecCloudOutput
	ToServerlessSpecCloudOutputWithContext(context.Context) ServerlessSpecCloudOutput
}

var serverlessSpecCloudPtrType = reflect.TypeOf((**ServerlessSpecCloud)(nil)).Elem()

type ServerlessSpecCloudPtrInput interface {
	pulumi.Input

	ToServerlessSpecCloudPtrOutput() ServerlessSpecCloudPtrOutput
	ToServerlessSpecCloudPtrOutputWithContext(context.Context) ServerlessSpecCloudPtrOutput
}

type serverlessSpecCloudPtr string

func ServerlessSpecCloudPtr(v string) ServerlessSpecCloudPtrInput {
	return (*serverlessSpecCloudPtr)(&v)
}

func (*serverlessSpecCloudPtr) ElementType() reflect.Type {
	return serverlessSpecCloudPtrType
}

func (in *serverlessSpecCloudPtr) ToServerlessSpecCloudPtrOutput() ServerlessSpecCloudPtrOutput {
	return pulumi.ToOutput(in).(ServerlessSpecCloudPtrOutput)
}

func (in *serverlessSpecCloudPtr) ToServerlessSpecCloudPtrOutputWithContext(ctx context.Context) ServerlessSpecCloudPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ServerlessSpecCloudPtrOutput)
}

func (in *serverlessSpecCloudPtr) ToOutput(ctx context.Context) pulumix.Output[*ServerlessSpecCloud] {
	return pulumix.Output[*ServerlessSpecCloud]{
		OutputState: in.ToServerlessSpecCloudPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IndexMetricInput)(nil)).Elem(), IndexMetric("dotproduct"))
	pulumi.RegisterInputType(reflect.TypeOf((*IndexMetricPtrInput)(nil)).Elem(), IndexMetric("dotproduct"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessSpecCloudInput)(nil)).Elem(), ServerlessSpecCloud("aws"))
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessSpecCloudPtrInput)(nil)).Elem(), ServerlessSpecCloud("aws"))
	pulumi.RegisterOutputType(IndexMetricOutput{})
	pulumi.RegisterOutputType(IndexMetricPtrOutput{})
	pulumi.RegisterOutputType(ServerlessSpecCloudOutput{})
	pulumi.RegisterOutputType(ServerlessSpecCloudPtrOutput{})
}
