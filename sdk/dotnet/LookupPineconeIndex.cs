// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PineconeDatabase.Pinecone
{
    public static class LookupPineconeIndex
    {
        /// <summary>
        /// The result of a get operation on a Pinecone index.
        /// </summary>
        public static Task<LookupPineconeIndexResult> InvokeAsync(LookupPineconeIndexArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<LookupPineconeIndexResult>("pinecone:index:lookupPineconeIndex", args ?? new LookupPineconeIndexArgs(), options.WithDefaults());

        /// <summary>
        /// The result of a get operation on a Pinecone index.
        /// </summary>
        public static Output<LookupPineconeIndexResult> Invoke(LookupPineconeIndexInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<LookupPineconeIndexResult>("pinecone:index:lookupPineconeIndex", args ?? new LookupPineconeIndexInvokeArgs(), options.WithDefaults());
    }


    public sealed class LookupPineconeIndexArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Pinecone index.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public LookupPineconeIndexArgs()
        {
        }
        public static new LookupPineconeIndexArgs Empty => new LookupPineconeIndexArgs();
    }

    public sealed class LookupPineconeIndexInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Pinecone index.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public LookupPineconeIndexInvokeArgs()
        {
        }
        public static new LookupPineconeIndexInvokeArgs Empty => new LookupPineconeIndexInvokeArgs();
    }


    [OutputType]
    public sealed class LookupPineconeIndexResult
    {
        /// <summary>
        /// The dimensions of the vectors in the index. Defaults to 1536.
        /// </summary>
        public readonly int? Dimension;
        public readonly string Host;
        /// <summary>
        /// The metric used to compute the distance between vectors.
        /// </summary>
        public readonly PineconeDatabase.Pinecone.IndexMetric Metric;
        /// <summary>
        /// The name of the Pinecone index.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Describe how the index should be deployed.
        /// </summary>
        public readonly Outputs.PineconeSpec Spec;
        public readonly bool Status;

        [OutputConstructor]
        private LookupPineconeIndexResult(
            int? dimension,

            string host,

            PineconeDatabase.Pinecone.IndexMetric metric,

            string name,

            Outputs.PineconeSpec spec,

            bool status)
        {
            Dimension = dimension;
            Host = host;
            Metric = metric;
            Name = name;
            Spec = spec;
            Status = status;
        }
    }
}
